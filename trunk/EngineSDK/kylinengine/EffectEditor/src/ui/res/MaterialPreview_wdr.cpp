//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: MaterialPreview.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
    #pragma implementation "MaterialPreview_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "MaterialPreview_wdr.h"

#include <wx/intl.h>

// Euro sign hack of the year
#if wxUSE_UNICODE
    #define __WDR_EURO__ wxT("\u20ac")
#else
    #if defined(__WXMAC__)
        #define __WDR_EURO__ wxT("\xdb")
    #elif defined(__WXMSW__)
        #define __WDR_EURO__ wxT("\x80")
    #else
        #define __WDR_EURO__ wxT("\xa4")
    #endif
#endif

// Implement window functions

wxSizer *MaterialPreview( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxFlexGridSizer *item0 = new wxFlexGridSizer( 6, 0, 0 );

    wxBoxSizer *item1 = new wxBoxSizer( wxVERTICAL );

    wxBitmapButton *item2 = new wxBitmapButton( parent, ID_BITMAPBUTTON, TexturePreview( 0 ), wxDefaultPosition, wxSize(64,64) );
    item1->Add( item2, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT, _("text"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item1, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

// Implement menubar functions

// Implement toolbar functions

// Implement bitmap functions

wxBitmap TexturePreview( size_t index )
{
    if (index == 0)
    {
        /* XPM */
        static const char *xpm_data[] = {
        /* columns rows colors chars-per-pixel */
        "16 15 2 1",
        "a c Black",
        "b c #FF0000",
        /* pixels */
        "aaaaaaaaaaaaaaaa",
        "aaaaaaaaaaaaaaaa",
        "aaabbbbbbbbbbaaa",
        "aaabaaaaaaaabaaa",
        "aaababaaababbaaa",
        "aaabaaaaaaabaaaa",
        "aaaababbbaabaaaa",
        "aaaabbaaaabaaaaa",
        "aabaaabbbbaababa",
        "aaabaaaaaabbbaaa",
        "aaabbbbabbbbaaaa",
        "aaaaaaabbbbaaaaa",
        "aaaabbbaabbaaaaa",
        "aabbaaaaaaabbbaa",
        "aaaaaaaaaaaaaaaa"
        };
        wxBitmap bitmap( xpm_data );
        return bitmap;
    }
    return wxNullBitmap;
}


// End of generated file
