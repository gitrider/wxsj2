//------------------------------------------------------------------------------
// Source code generated by wxDesigner from file: NewScene.wdr
// Do not modify this file, all changes will be lost!
//------------------------------------------------------------------------------

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
    #pragma implementation "NewScene_wdr.h"
#endif

// For compilers that support precompilation
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// Include private header
#include "NewScene_wdr.h"

#include <wx/intl.h>

// Euro sign hack of the year
#if wxUSE_UNICODE
    #define __WDR_EURO__ wxT("\u20ac")
#else
    #if defined(__WXMAC__)
        #define __WDR_EURO__ wxT("\xdb")
    #elif defined(__WXMSW__)
        #define __WDR_EURO__ wxT("\x80")
    #else
        #define __WDR_EURO__ wxT("\xa4")
    #endif
#endif

// Implement window functions

wxSizer *NewScene( wxWindow *parent, bool call_fit, bool set_sizer )
{
    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    wxFlexGridSizer *item1 = new wxFlexGridSizer( 2, 0, 0 );

    wxStaticText *item2 = new wxStaticText( parent, -1, /*_("Tile size")*/_("网格大小"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    item1->Add( item2, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item3 = new wxTextCtrl( parent, ID_TILESIZETEXTCTRL, wxT("32"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item3, 0, wxGROW|wxALL, 5 );

    wxStaticText *item4 = new wxStaticText( parent, -1, /*_("X size")*/_("X轴大小"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    item1->Add( item4, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item5 = new wxTextCtrl( parent, ID_XSIZETEXTCTRL, wxT("64"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item5, 0, wxGROW|wxALL, 5 );

    wxStaticText *item6 = new wxStaticText( parent, -1, /*_("Z size")*/_("Z轴大小"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    item1->Add( item6, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item7 = new wxTextCtrl( parent, ID_ZSIZETEXTCTRL, wxT("64"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item7, 0, wxGROW|wxALL, 5 );

    wxStaticText *item8 = new wxStaticText( parent, -1, /*_("Seed")*/_("随机种子"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    item1->Add( item8, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item9 = new wxTextCtrl( parent, ID_SEEDTEXTCTRL, wxT("0"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item9, 0, wxGROW|wxALL, 5 );

    wxStaticText *item10 = new wxStaticText( parent, -1, /*_("scale")*/_("放大系数"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    item1->Add( item10, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item11 = new wxTextCtrl( parent, ID_SCALETEXTCTRL, wxT("100"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item11, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxStaticText *item12 = new wxStaticText( parent, -1, /*_("Height scale")*/_("高度系数"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    item1->Add( item12, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxTextCtrl *item13 = new wxTextCtrl( parent, ID_HEIGHTSCALECTRL, wxT("100"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item13, 0, wxGROW|wxALL, 5 );

    wxStaticText *item14 = new wxStaticText( parent, -1, /*_("Texture")*/_("底层贴图"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT );
    item1->Add( item14, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxString *strs15 = (wxString*) NULL;
    wxComboBox *item15 = new wxComboBox( parent, ID_COMBO, wxT(""), wxDefaultPosition, wxDefaultSize, 0, strs15, wxCB_DROPDOWN );
    item1->Add( item15, 0, wxGROW|wxALL, 5 );

    wxStaticText *item16 = new wxStaticText( parent, -1, /*_("Generate Terrain")*/_("地形生成算法"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->Add( item16, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxString *strs17 = (wxString*) NULL;
    wxComboBox *item17 = new wxComboBox( parent, ID_CHOICE, wxT(""), wxDefaultPosition, wxSize(100,-1), 0, strs17, wxCB_DROPDOWN );
    item1->Add( item17, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    item0->Add( item1, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxFlexGridSizer *item18 = new wxFlexGridSizer( 1, 0, 0, 0 );
    item18->AddGrowableCol( 0 );

    wxButton *item19 = new wxButton( parent, wxID_OK, /*_("&OK")*/_("确定"), wxDefaultPosition, wxDefaultSize, 0 );
    item19->SetDefault();
    item18->Add( item19, 0, wxALIGN_CENTER|wxALL, 5 );

    wxButton *item20 = new wxButton( parent, wxID_CANCEL, /*_("&Cancel")*/_("取消"), wxDefaultPosition, wxDefaultSize, 0 );
    item18->Add( item20, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( item18, 0, wxGROW|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}

// Implement menubar functions

// Implement toolbar functions

// Implement bitmap functions


// End of generated file
