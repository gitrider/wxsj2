<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>wxPropertyGrid: wxPGProperty class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.6 -->
<div class="qindex"><a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="modules.htm">Modules</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="files.htm">File&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a></div>
<h1>wxPGProperty Class Reference</h1>wxPGProperty is base class for properties. Information here is provided primarily for anyone who creates new properties, since <b>all operations on properties should be done via wxPropertyGrid's or wxPropertyGridManager's methods</b>.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;<a class="el" href="propgrid_8h-source.htm">propgrid.h</a>&gt;</code>
<p>
<p>Inheritance diagram for wxPGProperty:
<p><center><img src="classwxPGProperty.png" usemap="#wxPGProperty_map" border="0" alt=""></center>
<map name="wxPGProperty_map">
<area href="classwxPGPropertyWithChildren.htm" alt="wxPGPropertyWithChildren" shape="rect" coords="87,56,252,80">
<area href="classwxPGRootPropertyClass.htm" alt="wxPGRootPropertyClass" shape="rect" coords="0,112,165,136">
<area href="classwxPropertyCategoryClass.htm" alt="wxPropertyCategoryClass" shape="rect" coords="175,112,340,136">
</map>
<a href="classwxPGProperty-members.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa2">CanHaveExtraChildren</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa4" doxytag="wxPGProperty::ClearFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ClearFlag</b> (unsigned char flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxPGVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa5">DoGetValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa6" doxytag="wxPGProperty::DoSetName" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>DoSetName</b> (const wxString &amp;str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa7">DoSetValue</a> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa10" doxytag="wxPGProperty::GetArrIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetArrIndex</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa11">GetChildCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa12">GetChoiceInfo</a> (wxPGChoiceInfo *choiceinfo)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa13">GetClassName</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa15" doxytag="wxPGProperty::GetDepth" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetDepth</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa16" doxytag="wxPGProperty::GetDisplayedString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetDisplayedString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa17">GetEditorClass</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa18" doxytag="wxPGProperty::GetFlags" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetFlags</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa19" doxytag="wxPGProperty::GetHelpString" ></a>
const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetHelpString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPGId&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa20">GetId</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxSize&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa21">GetImageSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa22">GetIndexInParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa24">GetLabel</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa25">GetName</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa26">GetParent</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>signed char&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa27">GetParentingType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPGPropertya21">GetParentState</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa30">GetType</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPGPropertya23">GetValueAsString</a> (int arg_flags) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa32">GetValueAsVariant</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa33">GetValueType</a> () const=0</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa34">GetY</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa37" doxytag="wxPGProperty::IsFlagSet" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsFlagSet</b> (unsigned char flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa38">IsOk</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa39" doxytag="wxPGProperty::IsSomeParent" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>IsSomeParent</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *candidate_parent) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa40">IsSubProperty</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa43">OnCustomPaint</a> (wxDC &amp;dc, const wxRect &amp;rect, <a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;paintdata)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa44">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxPGCtrlClass *wnd_primary, wxEvent &amp;event)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa45">PrepareValueForDialogEditing</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa47">SetAttribute</a> (int id, wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa48">SetChoices</a> (size_t id, const wxArrayString &amp;labels, const wxArrayInt &amp;values)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa49">SetChoicesPrivate</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa50" doxytag="wxPGProperty::SetFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetFlag</b> (unsigned char flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa51" doxytag="wxPGProperty::SetHelpString" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetHelpString</b> (const wxString &amp;help_string)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa52" doxytag="wxPGProperty::SetLabel" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetLabel</b> (const wxString &amp;label)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa54">SetValueFromInt</a> (long value, int flags)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPGPropertya41">SetValueFromString</a> (const wxString &amp;text, int flags)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa56" doxytag="wxPGProperty::ShowError" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ShowError</b> (const wxString &amp;msg)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa57" doxytag="wxPGProperty::StdValidationProcedure" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>StdValidationProcedure</b> (wxPGVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassa58" doxytag="wxPGProperty::UpdateControl" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>UpdateControl</b> (wxPGCtrlClass *primary)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPGPropertya45">wxPGProperty</a> (const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPGPropertya46">wxPGProperty</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPGProperty.htm#wxPGPropertya47">~wxPGProperty</a> ()</td></tr>

<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassb0" doxytag="wxPGProperty::Init" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>Init</b> ()</td></tr>

<tr><td colspan=2><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp0" doxytag="wxPGProperty::m_arrIndex" ></a>
unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><b>m_arrIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp1" doxytag="wxPGProperty::m_bgColIndex" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_bgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp3" doxytag="wxPGProperty::m_depth" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_depth</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp4" doxytag="wxPGProperty::m_depthBgCol" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_depthBgCol</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp6" doxytag="wxPGProperty::m_flags" ></a>
unsigned char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_flags</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp7" doxytag="wxPGProperty::m_helpString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_helpString</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp8" doxytag="wxPGProperty::m_label" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_label</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp9" doxytag="wxPGProperty::m_name" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_name</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp10" doxytag="wxPGProperty::m_parent" ></a>
<a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parent</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp11" doxytag="wxPGProperty::m_parentingType" ></a>
signed char&nbsp;</td><td class="memItemRight" valign=bottom><b>m_parentingType</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyCategoryClassp14" doxytag="wxPGProperty::m_y" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>m_y</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
wxPGProperty is base class for properties. Information here is provided primarily for anyone who creates new properties, since <b>all operations on properties should be done via wxPropertyGrid's or wxPropertyGridManager's methods</b>. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>When changing name of a property, it is essential to use <a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida181">wxPropertyGrid::SetPropertyName</a> (that's why there is no SetName method). </li></ul>
</dd></dl>

<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="wxPGPropertya46" doxytag="wxPGProperty::wxPGProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGProperty::wxPGProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Basic constructor. 
<p>
Should not be necessary to override.     </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertya45" doxytag="wxPGProperty::wxPGProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGProperty::wxPGProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Constructor. 
<p>
Real used property classes should have constructor of this style:<p>
<pre class="fragment"><div>        <span class="comment">// If MyValueType is a class, then it should be a constant reference</span>
        <span class="comment">// (e.g. const MyValueType&amp; ) instead.</span>
        wxMyProperty ( <span class="keyword">const</span> wxString&amp; label, <span class="keyword">const</span> wxString&amp; name,
            MyValueType value ) : wxPGProperty
        {
            <span class="comment">// Only required if MyValueType is not built-in default</span>
            <span class="comment">// (wxString, long, double, bool, and wxArrayString are;</span>
            <span class="comment">// wxFont, wxColour, etc. are not).</span>
            wxPG_INIT_REQUIRED_TYPE(MyValueType)
            <a class="code" href="classwxPGProperty.htm#wxPropertyCategoryClassa7">DoSetValue</a>(value); <span class="comment">// Generally recommended way to set the initial value.</span>

            <span class="comment">// If has child properties (i.e. wxPGPropertyWithChildren is used</span>
            <span class="comment">// as the parent class), then create children here. For example:</span>
            <span class="comment">//     AddChild( new wxStringProperty( wxT("Subprop 1"), wxPG_LABEL, value.GetSubProp1() ) );</span>
        }
</div></pre><p>
Of course, in this example, wxPGProperty could also be <a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> (if it has sub-properties) or actually any other property class.     </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertya47" doxytag="wxPGProperty::~wxPGProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxPGProperty::~<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Virtual destructor. 
<p>
It is customary for derived properties to override this.     </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="wxPropertyCategoryClassa2" doxytag="wxPGProperty::CanHaveExtraChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::CanHaveExtraChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if extra children can be added for this property (i.e. 
<p>
it is wxPropertyCategory or wxCustomProperty)     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa5" doxytag="wxPGProperty::DoGetValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxPGVariant wxPGProperty::DoGetValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns properly constructed wxPGVariant. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa7" doxytag="wxPGProperty::DoSetValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::DoSetValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGVariant&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>value</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets property's internal value. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Simple container with GetString(), GetLong() etc. methods. Currently recommended means to extract value is to use wxPGVariantToXXX(value) macro. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>Example pseudo-implementation with comments: <pre class="fragment"><div>        <span class="keywordtype">void</span> wxMyProperty::DoSetValue ( wxPGVariant value )
        {
            <span class="comment">// A) Get value. For example</span>
            <span class="keyword">const</span> wxMyValueType* pvalue = wxPGVariantToWxObjectPtr(value,wxMyValueType);
            <span class="comment">//    or:</span>
            <span class="keyword">const</span> wxString&amp; str = wxPGVariantToString(value);
            <span class="comment">//    or:</span>
            <span class="keywordtype">long</span> val = wxPGVariantToLong(value);

            <span class="comment">// B) If value is wxObject or void based with NULL default, then handle that:</span>
            <span class="keywordflow">if</span> ( pvalue )
                m_value = *pvalue;
            <span class="keywordflow">else</span>
                pmyvalue-&gt;SetToDefault();

            <span class="comment">// Otherwise</span>
            <span class="comment">// m_value = *pvalue;</span>
            <span class="comment">// is sufficient.</span>

            <span class="comment">// C) If has children, this should be here (before displaying in control).</span>
            RefreshChildren();

        }
</div></pre></dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa11" doxytag="wxPGProperty::GetChildCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPGProperty::GetChildCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns number of children (always 0 for normal properties). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa12" doxytag="wxPGProperty::GetChoiceInfo" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual int wxPGProperty::GetChoiceInfo </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxPGChoiceInfo *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>choiceinfo</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current value's index to the choice control. 
<p>
May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. <dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns -1 in choiceinfo-&gt;m_itemCount, then in that case this class be derived from wxBaseEnumPropertyClass (see <a class="el" href="propdev_8h.htm">propdev.h</a>) and GetEntry is used to fill an array (slower, but handier if you don't store your labels as arrays of strings).</li><li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa13" doxytag="wxPGProperty::GetClassName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const wxChar* wxPGProperty::GetClassName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns classname (for example, "wxStringProperty" for wxStringProperty) of a property class. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa17" doxytag="wxPGProperty::GetEditorClass" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPGProperty::GetEditorClass </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to an instance of editor class. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa20" doxytag="wxPGProperty::GetId" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPGId wxPGProperty::GetId </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property id. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa21" doxytag="wxPGProperty::GetImageSize" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxSize wxPGProperty::GetImageSize </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns size of the custom paint image in front of property. 
<p>
Returning -1 for either dimension means using default value. Default behaviour is to return wxSize(0,0), which means no image.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa22" doxytag="wxPGProperty::GetIndexInParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> unsigned int wxPGProperty::GetIndexInParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns position in parent's array. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa24" doxytag="wxPGProperty::GetLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPGProperty::GetLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's label. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa25" doxytag="wxPGProperty::GetName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPGProperty::GetName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's name (alternate way to access property). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa26" doxytag="wxPGProperty::GetParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>* wxPGProperty::GetParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return parent of property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa27" doxytag="wxPGProperty::GetParentingType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> signed char wxPGProperty::GetParentingType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns 0 for normal items. 
<p>
1 for categories, -1 for other properties with children, -2 for wxCustomProperty (mostly like -1 ones but with few expections). <dl compact><dt><b>Remarks:</b></dt><dd>Should not be overridden by new custom properties. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertya21" doxytag="wxPGProperty::GetParentState" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a>* wxPGProperty::GetParentState </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> in which this property belongs. 
<p>

<p>
Reimplemented in <a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa28">wxPGPropertyWithChildren</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa30" doxytag="wxPGProperty::GetType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxChar* wxPGProperty::GetType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns type name of property that is compatible with CreatePropertyByType. 
<p>
and wxVariant::GetType.     </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertya23" doxytag="wxPGProperty::GetValueAsString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxString wxPGProperty::GetValueAsString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>arg_flags</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns text representation of property's value. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>arg_flags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one (they may be different). </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxPGPropertyWithChildren.htm#wxPGRootPropertyClassa29">wxPGPropertyWithChildren</a>, and <a class="el" href="classwxPropertyCategoryClass.htm#wxPropertyCategoryClassa31">wxPropertyCategoryClass</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa32" doxytag="wxPGProperty::GetValueAsVariant" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPGProperty::GetValueAsVariant </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns value as wxVariant. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa33" doxytag="wxPGProperty::GetValueType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual const <a class="el" href="classwxPGValueType.htm">wxPGValueType</a>* wxPGProperty::GetValueType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to the object that has methods related to the value type of this property. 
<p>
Keep atleast this method abstract so the class is kept abstract.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa34" doxytag="wxPGProperty::GetY" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPGProperty::GetY </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets pre-calculated top y coordinate of property graphics. 
<p>
This cannot be relied on all times (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> knows when :) ), and value is -1 if property is not visible.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa38" doxytag="wxPGProperty::IsOk" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::IsOk </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property is valid and <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> methods can operate on it safely. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa40" doxytag="wxPGProperty::IsSubProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::IsSubProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns TRUE if this is a sub-property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa43" doxytag="wxPGProperty::OnCustomPaint" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::OnCustomPaint </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxDC &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dc</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxRect &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>rect</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>paintdata</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Override to paint an image in front of the property value text or drop-down list item. 
<p>
If property's <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa21">GetImageSize()</a> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa21">GetImageSize()</a> returned higher height than row height).<p>
NOTE: Following applies when <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa21">GetImageSize()</a> returns a "flexible" height ( using <a class="el" href="group__miscellaneous.htm#ga4">wxPG_FLEXIBLE_SIZE(W,H)</a> macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>dc</em>&nbsp;</td><td>wxDC to paint on. </td></tr>
    <tr><td valign=top><em>rect</em>&nbsp;</td><td>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </td></tr>
    <tr><td valign=top><em>paintdata</em>&nbsp;</td><td><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> structure with much useful data. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</li><li>Due to technical reasons, rect's height will be default even if custom height was reported during measure call.</li><li>Font and text colour should not be modified.</li><li>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</li><li>Pen is guaranteed to be 1-wide 'black' (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well. </li></ul>
</dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#wxPGPropertya23"></a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa44" doxytag="wxPGProperty::OnEvent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::OnEvent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxPGCtrlClass *&nbsp;</td>
          <td class="mdname" nowrap> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxEvent &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>event</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Events received by editor widgets are processed here. 
<p>
Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, wxSystemColourProperty custom handles wxEVT_COMMAND_CHOICE_SELECTED). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>event</em>&nbsp;</td><td>Associated wxEvent. This may be NULL, which indicates focus is leaving control. Property should get the edited value from wnd_primary and store it to the internals. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Should</em>&nbsp;</td><td>return TRUE if any changes in value should be reported. This is case, for example, when enter is pressed in wxTextCtrl.<br>
 parent-&gt;EditorsValueWasModified() should be called on any change, regardless if it is not large enough to be reported. This is case, for example, when text in wxTextCtrl changes. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>Note that event is pointer, not a reference. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa45" doxytag="wxPGProperty::PrepareValueForDialogEditing" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPGProperty::PrepareValueForDialogEditing </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>propgrid</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Updates property value in case there were last minute changes. 
<p>
If value was unspecified, it will be set to default. Use only for properties that have TextCtrl-based editor. <dl compact><dt><b>Remarks:</b></dt><dd>If you have code similar to <pre class="fragment"><div>            <span class="comment">// Update the value in case of last minute changes</span>
            <span class="keywordflow">if</span> ( primary &amp;&amp; propgrid-&gt;IsEditorsValueModified() )
                 <a class="code" href="classwxPGProperty.htm#wxPropertyCategoryClassa17">GetEditorClass</a>()-&gt;<a class="code" href="classwxPGEditor.htm#wxPGEditora2">CopyValueFromControl</a>( <span class="keyword">this</span>, primary );
</div></pre>in <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa44">wxPGProperty::OnEvent</a> wxEVT_COMMAND_BUTTON_CLICKED handler, then replace it with call to this method. </dd></dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>True</em>&nbsp;</td><td>if value changed. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa47" doxytag="wxPGProperty::SetAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPGProperty::SetAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets an attribute of this property. 
<p>
This is quite property class specific, and there are no common attributes. Note that attribute may be specific to a property instance, or it may affect all properties of its class. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Identifier of attribute </td></tr>
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Value for that attribute. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa48" doxytag="wxPGProperty::SetChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPGProperty::SetChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">size_t&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>labels</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayInt &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>values</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If is non-zero and found, then set choices to refer to that. 
<p>
If not, then creates new set of choices with given id. Returns id of created <a class="el" href="classwxPGConstants.htm">wxPGConstants</a>.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa49" doxytag="wxPGProperty::SetChoicesPrivate" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPGProperty::SetChoicesPrivate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property has choices and they are not yet private, new such copy of them will be created. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyCategoryClassa54" doxytag="wxPGProperty::SetValueFromInt" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::SetValueFromInt </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">long&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts integer to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa7">DoSetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Int to get the value from. </td></tr>
    <tr><td valign=top><em>flags</em>&nbsp;</td><td>If has wxPG_FULL_VALUE, then the value given is a actual value and not an index. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>TRUE</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPGPropertya41" doxytag="wxPGProperty::SetValueFromString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual bool wxPGProperty::SetValueFromString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts string to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#wxPropertyCategoryClassa7">DoSetValue()</a> on it. 
<p>
Default behaviour is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>text</em>&nbsp;</td><td>String to get the value from. </td></tr>
    <tr><td valign=top><em>report_error</em>&nbsp;</td><td>If TRUE, invalid string will be reported (prefer to use wxLogError). </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>TRUE</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxPGPropertyWithChildren.htm#wxPropertyCategoryClassa55">wxPGPropertyWithChildren</a>.    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="propgrid_8h-source.htm">propgrid.h</a></ul>
<hr size="1"><address style="align: right;"><small>Generated on Thu Apr 14 22:21:06 2005 for wxPropertyGrid by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 > 
</a>1.3.6 </small></address>
</body>
</html>
