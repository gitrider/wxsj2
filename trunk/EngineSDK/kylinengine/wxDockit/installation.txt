
 wxDockIt Library for wxWidgets - INSTALLATION ---------------------------------------------
 wxDockIt is a wxWidgets-based library and thus you'll need to compile wxWidgets 
 before compiling wxDockIt.
 wxDockIt currently supports wxWidgets version 2.4.x, 2.5.x, 2.6.x; like wxWidgets 
 it uses Bakefile (http://bakefile.sf.net) for its build system so you'll find that
 all the makefiles/IDE project files have the support for the same options.

 For any problem encountered while building wxDockIt please write to the
 wxextended-users@lists.sourceforge.net mailing list.

 Note: If you are compiling with wxWidgets 2.4.x edit include/wx/gdi.h and 
       define the symbol wxUSE_WX24.
 

 Compiling wxDockIt using a win32 makefile
 =========================================

 Unzip the contents of the source archive that you should have downloaded from
 https://sourceforge.net/project/showfiles.php?group_id=108552 
 (make sure you unzip with 'maintain/preserve directory' structure option).
 Then, go to [wxDockIt folder]/build/msw and type:

    nmake -fmakefile.vc             if using MSVC++ command line tools
    make -fmakefile.bcc             if using BorlandC++ command line tools    wmake -fmakefile.wat            if using Watcom command line tools
    mingw32-make -fmakefile.gcc     if using Mingw32 command line tools
 to compile the library. For the complete list of supported options just open a
 makefile with a text editor (like notepad) and read the section titled
 "These are configurable options". The main options are:

 WX_DIR=$(WXWIN)      The directory where wxWidgets library is installed
                      This defaults to WXWIN environment variable's value
                      but you can ovverride it specifying a new path;
 WX_SHARED=0/1        If 1, then a DLL build of wxWidgets will be used
                      (and also wxDockIt will be compiled as DLL);
 WX_UNICODE=0/1       If 1, then a Unicode build of wxWidgets will be used
                      (and also wxDockIt will be compiled with Unicode enabled);
 WX_DEBUG=0/1         If 1, then a debug build of wxWidgets will be used
                      (and also wxDockIt will be compiled in debug mode);
 WX_VERSION=25/26/..  wxWidgets libraries' names are version-dependent so
                      the makefile needs to know the wx version to use
                      (25 stays for 2.5.x, 26 for 2.6.x);

 VERY IMPORTANT: when compiling wxDockIt you *must* use the same settings you used
                 to compile wxWidgets; if you built with the options
                                    BUILD=debug UNICODE=1 SHARED=0
                 then you must build wxDockIt with the options
                                  WX_DEBUG=1 WX_UNICODE=1 WX_SHARED=0
                 If you don't specify the same settings, you'll get compile errors
                 (since wxDockIt will be unable to find wxWidgets' setup.h ...)

 To compile the samples, you should just go to [wxDockIt folder]/samples/build/msw
 and type the same command used to build wxDockIt library.
 The samples' binaries will be put in 
    [wxDockIt folder]/samples/sdi/sdi.exe
    [wxDockIt folder]/samples/mdi/mdi.exe
 Run them to check if wxDockIt has been correctly compiled.


 Compiling wxDockIt using an IDE project file
 ============================================

 Currently, only Microsoft Visual Studio 6 IDE project files are generated.
 However, you can use these files also with Microsoft Visual Studio .NET 2003
 and Microsoft Visual Studio 2005.

 The project files are located at [wxDockIt folder]/build/msw; open the DSW
 file and then choose the configuration which matches the settings you used to
 build wxWidgets (i.e. use "Unicode Debug DLL" if you built wxWidgets with
 Unicode enabled, in debug mode and as shared library).
 
 Then, open the DSW file located at [wxDockIt folder]/samples/build/msw to
 compile the samples.

 NOTE #1: the "[wxDockIt folder]/build/msw/all.dsw" project file allows to build
          the library and the samples using a single workspace.
 NOTE #2: when using Microsoft Visual Studio 2005, it may happen that, after
          the conversion of the DSW file to SLN, you get a lot of linking errors;
          this is because of an invalid link line generated by MSVC++ 2005 while
          converting; go to Project->Properties->Linker->Input and append the
          following string at the end of the "Additional Dependencies" box
          (MSVC++ does not care about libraries repeated twice):

          "kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib 
           shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib 
           advapi32.lib wsock32.lib odbc32.lib oleacc.lib"

 NOTE #3: if you get the following error when using Microsoft Visual Studio 2005:
         
          CVTRES : fatal error CVT1100: duplicate resource.  type:MANIFEST, ...
          then, just go to Project->Properties->Linker->Manifest File and set
          "NO" in the "generate manifest" combo box.



 Compiling wxDockIt on a Linux/GNU-based system ============================================== 
 NOTE: wxDockIt currently supports only the wxGTK port of wxWidgets.
       wxX11 and wxMotif cannot be used with wxDockIt.

 Like other autoconf-based packages, you just need to untar the source package
 you've downloaded and then type:

     ./configure && make && make install

 wxDockIt configure script will automatically recognize the settings you used
 to compile wxWidgets and then will use them to configure wxDockIt.
 The makefile also includes a "uninstall" target to remove wxDockIt headers &
 library in case you want to remove it :-(

 To compile the samples, just type:

     cd samples && make

 if everything is okay, then you should be able to run the samples:

     cd mdi && ./mdi
     cd ../sdi && ./sdi

